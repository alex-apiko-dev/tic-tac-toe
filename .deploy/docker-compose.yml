version: '3.0'

volumes:
  database:
    name: ${APP_NAME}-database

services:

  base:
    image: ${BASE_IMAGE}
    build:
      dockerfile: ./.deploy/Dockerfile
      context: ../.
    working_dir: /application
    volumes:
      - ./../:/application

  database:
    container_name: ${APP_NAME}-database
    image: mysql:8.0.20
    command: --default-authentication-plugin=mysql_native_password
    volumes:
      - database:/var/lib/mysql:cached
    ports:
      - ${HOST_DB_PORT}:3306
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
      MYSQL_DATABASE: ${DB_DATABASE}
      MYSQL_USER: ${DB_USERNAME}
      MYSQL_PASSWORD: ${DB_PASSWORD}
    depends_on:
      - base
    networks:
      network:
        aliases:
          - ${DB_HOST}

  app:
    container_name: ${APP_NAME}-app
    image: ${APP_NAME}-app:latest
    build:
      dockerfile: ./.deploy/Dockerfile.app
      context: ../.
      args:
        - BASE_IMAGE=${BASE_IMAGE}
    working_dir: /application
    volumes:
      - ./../:/application:cached
    entrypoint: [ "sh", "/application/.deploy/bash/app.sh"]
    depends_on:
      - base
      - database
    restart: always
    networks:
      network:
        aliases:
          - app

  web:
    container_name: ${APP_NAME}-web
    image: ${APP_NAME}-web:latest
    build:
      dockerfile: ./.deploy/Dockerfile.web
      context: ../.
      args:
        - BASE_IMAGE=${BASE_IMAGE}
    volumes:
      - ./../:/application:cached
      - ./web/default.conf:/etc/nginx/conf.d/default.conf
    ports:
      - ${HOST_SERVER_PORT}:80
    depends_on:
      - base
      - app
    restart: always
    networks:
      network:
        aliases:
          - web

networks:
  network:
    name: ${APP_NAME}
    driver: bridge
